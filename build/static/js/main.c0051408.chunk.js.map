{"version":3,"sources":["views/Home/Home.js","views/AboutUs/AboutUs.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["require","client","contentful","space","accessToken","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchPosts","getEntries","setPosts","response","setState","posts","items","filter","item","sys","contentType","id","showDetail","titleDetail","buildProjectGrid","state","map","entry","react_default","a","createElement","onMouseOver","fields","title","onMouseOut","className","style","backgroundImage","concat","picture","file","url","then","_this2","_this$state","Component","AboutUs","name","Header","Link","to","href","target","App","BrowserRouter","Header_Header","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0051408.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as contentful from 'contentful'\n\nrequire('./Home.scss');\n\n\nconst client = contentful.createClient({\n    space: 'v38lncoclhk8',\n    accessToken: 'fcbd187a36833d98e586817915796a70f1e84daf29570e098b1b98817105231e'\n})\n\nclass Home extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: [],\n            showDetail: false,\n            titleDetail: ''\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPosts().then(this.setPosts);\n    }\n\n    fetchPosts = () => client.getEntries()\n\n    setPosts = response => {\n        this.setState({\n          posts: response.items.filter(item => item.sys.contentType.sys.id === 'project' )\n        })\n    }\n\n    showDetail = (showDetail, titleDetail) => {\n        this.setState({\n            showDetail,\n            titleDetail\n          })\n    }\n\n    buildProjectGrid = () => {\n        const { posts } = this.state;\n        const gridContent = posts.map(entry => {\n            return(\n                <div\n                    onMouseOver={() => this.showDetail(true, entry.fields.title)}\n                    onMouseOut={() => this.showDetail(false, '')}\n                    className=\"l-home__grid-box\"\n                    style={{\n                        backgroundImage: `url(${entry.fields.picture.fields.file.url})`\n                    }}>\n                </div>\n            )\n        })\n\n        return gridContent;\n    }\n\n    render() {\n        const { showDetail, titleDetail } = this.state;\n\n        return (\n            <div className=\"l-home\">\n                <h1 className=\"l-home__title\">somos la última carnicería de madrid</h1>\n                <div className=\"l-home__grid\">\n                    {this.buildProjectGrid()}\n                    {showDetail &&\n                        <div onMouseOver={() => this.showDetail(true, titleDetail)} className=\"l-home__grid-detail\">\n                            <h2>{titleDetail}</h2>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport { Home };\n","import React, { Component } from 'react';\nimport * as contentful from 'contentful'\n\nrequire('./AboutUs.scss');\n\n\nconst client = contentful.createClient({\n    space: 'v38lncoclhk8',\n    accessToken: 'fcbd187a36833d98e586817915796a70f1e84daf29570e098b1b98817105231e'\n})\n\nclass AboutUs extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: [],\n            showDetail: false,\n            titleDetail: ''\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPosts().then(this.setPosts);\n    }\n\n    fetchPosts = () => client.getEntries()\n\n    setPosts = response => {\n        this.setState({\n          posts: response.items.filter(item => item.sys.contentType.sys.id === 'peopleCarniceria' )\n        })\n    }\n\n    showDetail = (showDetail, titleDetail) => {\n        this.setState({\n            showDetail,\n            titleDetail\n          })\n    }\n\n    buildProjectGrid = () => {\n        const { posts } = this.state;\n        const gridContent = posts.map(entry => {\n            return(\n                <div\n                    onMouseOver={() => this.showDetail(true, entry.fields.name)}\n                    onMouseOut={() => this.showDetail(false, '')}\n                    className=\"l-about-us__grid-box\"\n                    style={{\n                        backgroundImage: `url(${entry.fields.picture.fields.file.url})`\n                    }}>\n                </div>\n            )\n        })\n\n        return gridContent;\n    }\n\n    render() {\n        const { showDetail, titleDetail } = this.state;\n\n        return (\n            <div className=\"l-about-us\">\n                <h1 className=\"l-about-us__title\">quienes somos</h1>\n                <div className=\"l-about-us__grid\">\n                    {this.buildProjectGrid()}\n                    {showDetail &&\n                        <div onMouseOver={() => this.showDetail(true, titleDetail)} className=\"l-about-us__grid-detail\">\n                            <h2>{titleDetail}</h2>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport { AboutUs };\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nrequire('./Header.scss');\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"c-header\">\n                <Link to=\"/\">\n                    <h1 className=\"c-header__title\">|Carnicería</h1>\n                </Link>\n                <ul className=\"c-header__list\">\n                    <li>\n                        <Link to=\"/about-us/\">Quienes somos</Link>\n                    </li>\n                </ul>\n                <ul className=\"c-header__list-social\">\n                    <li>\n                        <a href=\"https://www.instagram.com/espaciocarniceria/\" target=\"_blank\">Instagram</a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.facebook.com/espaciocarniceria/\" target=\"_blank\">Facebook</a>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport { Header };\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Home } from './views/Home/Home';\nimport { AboutUs } from './views/AboutUs/AboutUs';\nimport { Header } from './components/Header/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"body\">\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about-us/\" component={AboutUs} />\n          {/* <Route path=\"/about-us\" component={About} />\n          <Route path=\"/topics\" component={Topics} /> */}\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}